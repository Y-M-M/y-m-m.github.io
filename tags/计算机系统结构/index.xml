<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机系统结构 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 计算机系统结构 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 May 2025 15:06:37 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机系统结构</title>
      <link>https://y-m-m.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;h1 id=&#34;第1章-计算机系统结构的基础知识&#34;&gt;第1章 计算机系统结构的基础知识&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11-计算机系统结构的基本概念&#34;&gt;1.1 计算机系统结构的基本概念&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第一台通用电子计算机诞生于1946年&lt;/li&gt;&#xA;&lt;li&gt;计算机技术的飞速发展受益于两个方面&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机制造技术的发展&lt;/li&gt;&#xA;&lt;li&gt;计算机系统结构的创新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;经历了四个发展过程&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2025-03-03%2014.55.27.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;2002年以来发展缓慢的原因&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大功耗问题&lt;/li&gt;&#xA;&lt;li&gt;可以进一步有效地开发的指令级并行性已经很少&lt;/li&gt;&#xA;&lt;li&gt;存储器访问速度的提高缓慢&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;系统结构的重大转折&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从单纯依靠指令级并行转向开发线程并行和数据级并行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;111-计算机系统结构的层次结构&#34;&gt;1.1.1 计算机系统结构的层次结构&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;计算机系统 = 硬件/固件 + 软件&lt;/li&gt;&#xA;&lt;li&gt;计算机语言从低级到高级发展&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高一级语言的语句相对于低一级语言来说功能更强，更便于应用，但又都以低级语言为基础。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;从计算机语言的角度，把计算机系统按功能划分成多级层次结构&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每一层以一种语言为特征&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2025-03-03%2015.01.37.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;物理机：用硬件/固件实现的机器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最下面的两级机器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;虚拟机：由软件实现的机器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;虚拟机中有些操作可以由硬件或固件实现&lt;/li&gt;&#xA;&lt;li&gt;固件：具有软件功能的硬件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;各机器级的实现主要靠翻译或解释，或两者的结合&#xA;&lt;ul&gt;&#xA;&lt;li&gt;翻译：先用转换程序把高一级机器上的程序转换为低一级机器上等效的程序，然后再在这低一级机器上运行，实现程序的功能。&lt;/li&gt;&#xA;&lt;li&gt;解释：对于高一级机器上的程序中的每一条语句或指令，都是转去执行低一级机器上的一段等效程序。执行完后，再去高一级机器取下一条语句或指令，再进行解释执行，如此反复，直到解释执行完整个程序。&lt;/li&gt;&#xA;&lt;li&gt;解释执行比编译后再执行所花的时间多，但占用的存储空间较少。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;112-计算机系统结构的定义&#34;&gt;1.1.2 计算机系统结构的定义&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;计算机系统结构的经典定义&#xA;&lt;ul&gt;&#xA;&lt;li&gt;传统机器程序员所看到的计算机属性，即概念性结构与功能特性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;按照计算机系统的多级层次结构，不同级程序员所看到的计算机具有不同的属性。&lt;/li&gt;&#xA;&lt;li&gt;透明性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在计算机技术中，把这种本来存在的事物或属性，但从某种角度看又好像不存在的概念称为透明性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;广义的系统结构定义：指令系统结构、组成、硬件&lt;/li&gt;&#xA;&lt;li&gt;计算机系统结构的实质&#xA;&lt;ul&gt;&#xA;&lt;li&gt;确定计算机系统中软硬件的界面，界面之上是软件实现的功能，界面之下是硬件和固件实现的功能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;113-计算机组成和计算机实现&#34;&gt;1.1.3 计算机组成和计算机实现&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;计算机系统结构：计算机系统的软、硬件的界面&#xA;&lt;ul&gt;&#xA;&lt;li&gt;即机器语言程序员所看到的传统机器级所具有的属性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;计算机组成：计算机系统结构的逻辑实现&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包含物理机器级中的数据流和控制流的组成以及逻辑设计等&lt;/li&gt;&#xA;&lt;li&gt;着眼于：物理机器级内各事件的排序方式与控制方式、各部件的功能以及各部件之间的联系。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;计算机实现：计算机组成的物理实现&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包括处理机、主存等部件的物理结构，器件的集成度和速度，模块、插件、底板的划分与连接，信号传输，电源、冷却及整机装配技术等。&lt;/li&gt;&#xA;&lt;li&gt;着眼于：器件技术（起主导作用）、微组装技术。&lt;/li&gt;&#xA;&lt;li&gt;具有相同系统结构的计算机可以采用不同的计算机组成。同一种计算机组成又可以采用多种不同的计算机实现。&lt;/li&gt;&#xA;&lt;li&gt;举例：乘法指令 、主存容量与编址方式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;系列机&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由同一厂家生产的具有相同系统结构、但具有不同组成和实现的一系列不同型号的机器。&lt;/li&gt;&#xA;&lt;li&gt;例如 IBM公司的IBM370系列，Intel公司的x86系列等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;114-计算机系统结构的分类&#34;&gt;1.1.4 计算机系统结构的分类&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Flynn分类法&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;按照指令流和数据流的多倍性进行分类&#xA;&lt;ul&gt;&#xA;&lt;li&gt;指令流：计算机执行的指令序列&lt;/li&gt;&#xA;&lt;li&gt;数据流：由指令流调用的数据序列&lt;/li&gt;&#xA;&lt;li&gt;多倍性：在系统最受限的部件上，同时处于同一执行阶段的指令或数据的最大数目。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;把计算机系统的结构分为4类&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单指令流单数据流SISD&lt;/li&gt;&#xA;&lt;li&gt;单指令流多数据流SIMD&lt;/li&gt;&#xA;&lt;li&gt;多指令流单数据流MISD&lt;/li&gt;&#xA;&lt;li&gt;多指令流多数据流MIMD&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;4类计算机的基本结构&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IS：指令流&lt;/li&gt;&#xA;&lt;li&gt;DS：数据流&lt;/li&gt;&#xA;&lt;li&gt;CS：控制流&lt;/li&gt;&#xA;&lt;li&gt;CU：控制部件&lt;/li&gt;&#xA;&lt;li&gt;PU：处理部件&lt;/li&gt;&#xA;&lt;li&gt;MM和SM：存储器&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2025-03-03%2016.07.41.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;冯氏分类法&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
