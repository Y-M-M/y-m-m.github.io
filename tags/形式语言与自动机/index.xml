<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>形式语言与自动机 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%9C%BA/</link>
    <description>Recent content in 形式语言与自动机 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 05 Oct 2024 11:27:35 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>形式语言与自动机</title>
      <link>https://y-m-m.github.io/post/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%9C%BA/</link>
      <pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%9C%BA/</guid>
      <description>&lt;h1 id=&#34;绪论&#34;&gt;绪论&lt;/h1&gt;&#xA;&lt;h2 id=&#34;形式语言&#34;&gt;形式语言&lt;/h2&gt;&#xA;&lt;h3 id=&#34;什么是形式语言&#34;&gt;什么是形式语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;形式化描述的字母表上的字符串的集合&lt;/li&gt;&#xA;&lt;li&gt;字母表：字符的有限集合&lt;/li&gt;&#xA;&lt;li&gt;字符串：字母表中的字符构成的有限序列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;为什么用形式语言&#34;&gt;为什么用形式语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自然语言：人们平时说话时所使用的一种语言&lt;/li&gt;&#xA;&lt;li&gt;形式语言：通过人们公认的符号，表达方式所描述的一种语言，是一种通用语言，没有国籍之分&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;自动机&#34;&gt;自动机&lt;/h2&gt;&#xA;&lt;h3 id=&#34;什么是自动机&#34;&gt;什么是自动机&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;具有离散输入输出的数学模型&lt;/li&gt;&#xA;&lt;li&gt;接受一定的输入，执行一定的动作，产生一定的结果。使用状态迁移描述整个工作过程&lt;/li&gt;&#xA;&lt;li&gt;状态：一个标识，能区分自动机在不同时刻的状况。有限状态系统具有任意有限数目的“内部状态‘&lt;/li&gt;&#xA;&lt;li&gt;自动机的本质：根据状态、输入和规则决定下一个状态&lt;/li&gt;&#xA;&lt;li&gt;状态+输入+规则-&amp;gt;状态迁移&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分类&#34;&gt;分类&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有限状态自动机：由一个带有读头的有限控制器和一条写有字符的输入带组成&lt;/li&gt;&#xA;&lt;li&gt;下推自动机：由一条输入带，一个有限控制器和一个下推栈组成&lt;/li&gt;&#xA;&lt;li&gt;基本图灵机：由一个具有读写头的有限控制器和一条无限带组成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;形式语言与自动机的关系&#34;&gt;形式语言与自动机的关系&lt;/h2&gt;&#xA;&lt;h3 id=&#34;密切相关&#34;&gt;密切相关&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;形式语言：字符串&lt;/li&gt;&#xA;&lt;li&gt;自动机：字符串的识别系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;形式语言&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;自动机&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;非限定性语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;图灵机&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;上下文有关语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;线性有界自动机&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;上下文无关语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;下推式存贮自动机&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;正则语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;有限自动机&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;证明技术&#34;&gt;证明技术&lt;/h2&gt;&#xA;&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;证明：命题的序列，其中的每一个命题或者是已知的命题，或者是由前面已经出现过的命题使用逻辑公理和规则得出&lt;/li&gt;&#xA;&lt;li&gt;假设（前提）：已知的命题集合&lt;/li&gt;&#xA;&lt;li&gt;结论：最后一个命题称为该前提的结论&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;演绎证明&#34;&gt;演绎证明&lt;/h3&gt;&#xA;&lt;h4 id=&#34;if-then命题&#34;&gt;if-then命题&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;证明方法：if部分作为已知的命题，then部分作为结论&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;if-and-only-if命题&#34;&gt;if-and-only-if命题&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;证明方法：从两个方向分别证明&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;有关集合的命题&#34;&gt;有关集合的命题&lt;/h4&gt;&#xA;&lt;h3 id=&#34;原命题的逆否命题&#34;&gt;原命题的逆否命题&lt;/h3&gt;&#xA;&lt;h3 id=&#34;反证法&#34;&gt;反证法&lt;/h3&gt;&#xA;&lt;h3 id=&#34;举例证明或否证&#34;&gt;举例证明或否证&lt;/h3&gt;&#xA;&lt;h3 id=&#34;归纳定义与结构归纳法&#34;&gt;归纳定义与结构归纳法&lt;/h3&gt;&#xA;&lt;h4 id=&#34;集合的归纳定义&#34;&gt;集合的归纳定义&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基础（直接定义集合中的元素，至少1个）&lt;/li&gt;&#xA;&lt;li&gt;归纳（从已知元素生成新元素的规则）&lt;/li&gt;&#xA;&lt;li&gt;极小性限制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;结构归纳法&#34;&gt;结构归纳法&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基础&lt;/li&gt;&#xA;&lt;li&gt;归纳&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;一般数学归纳法&#34;&gt;一般数学归纳法&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于自然数的归纳&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;第二章-语言及文法&#34;&gt;第二章 语言及文法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;语言的定义与运算&#34;&gt;语言的定义与运算&lt;/h2&gt;&#xA;&lt;h3 id=&#34;语言的一些术语&#34;&gt;语言的一些术语&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字母表：字符的有限集合，记为T&lt;/li&gt;&#xA;&lt;li&gt;字符串：由字母表T中的字符构成的序列称字母表T上的字符串（句子）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;常记为t,u,v,w,x,y,z&lt;/li&gt;&#xA;&lt;li&gt;常用a,b,c,d来表示单个字符&lt;/li&gt;&#xA;&lt;li&gt;常用a&lt;sup&gt;n&lt;/sup&gt;表示n个a的字符串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;字母表&#34;&gt;字母表&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;概念 形式符号的集合&lt;/li&gt;&#xA;&lt;li&gt;记号 T&lt;/li&gt;&#xA;&lt;li&gt;举例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;英文字母表&lt;/li&gt;&#xA;&lt;li&gt;英文标点符号表&lt;/li&gt;&#xA;&lt;li&gt;汉字表&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;字符串&#34;&gt;字符串&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字母表T上的一个字符串（串、字），为T中的字符构成的一个有限序列，空串，用ε来表示&lt;/li&gt;&#xA;&lt;li&gt;绝对值符号，表示字符串的长度&lt;/li&gt;&#xA;&lt;li&gt;a的i次幂，表示含有i个a的字符串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;连接concatenation&#34;&gt;连接concatenation&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;连接运算的性质&#xA;&lt;ul&gt;&#xA;&lt;li&gt;结合律&lt;/li&gt;&#xA;&lt;li&gt;空串是单位元&lt;/li&gt;&#xA;&lt;li&gt;连接后的长度等于各串的长度之和&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;其他运算&#34;&gt;其他运算&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;取头字符&lt;/li&gt;&#xA;&lt;li&gt;取尾部&lt;/li&gt;&#xA;&lt;li&gt;字串匹配&lt;/li&gt;&#xA;&lt;li&gt;前缀、后缀、子串&lt;/li&gt;&#xA;&lt;li&gt;空串是任意串的前缀、后缀及子串&lt;/li&gt;&#xA;&lt;li&gt;字符串的逆：将字符串倒置&lt;/li&gt;&#xA;&lt;li&gt;空串的逆还是它本身&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;字母表的幂运算&#34;&gt;字母表的幂运算&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;（1）T&lt;sup&gt;0&lt;/sup&gt; 空串 T&lt;sup&gt;n&lt;/sup&gt;长度为n的字符串&lt;/li&gt;&#xA;&lt;li&gt;（2）设x在T&lt;sup&gt;n-1&lt;/sup&gt;中，那么ax在T&lt;sup&gt;n&lt;/sup&gt;中&lt;/li&gt;&#xA;&lt;li&gt;（3）T&lt;sup&gt;n&lt;/sup&gt;中的元素只能由（1）和（2）构成&lt;/li&gt;&#xA;&lt;li&gt;*闭包 字母表T中的字符所构成的任意长度字符串的集合&lt;/li&gt;&#xA;&lt;li&gt;+闭包 没有空串的*闭包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;什么是语言&#34;&gt;什么是语言&lt;/h3&gt;&#xA;&lt;h4 id=&#34;概念-1&#34;&gt;概念&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;设T为字母表，则任何T的星号闭包的&lt;em&gt;子集&lt;/em&gt;是字母表T上的一个语言&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;举例&#34;&gt;举例&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;英文单词集&lt;/li&gt;&#xA;&lt;li&gt;C语言程序集&lt;/li&gt;&#xA;&lt;li&gt;汉语成语集&lt;/li&gt;&#xA;&lt;li&gt;化学分子式集&lt;/li&gt;&#xA;&lt;li&gt;空语言与只含空串的语言不一样&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;运算&#34;&gt;运算&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;并、交、补&lt;/li&gt;&#xA;&lt;li&gt;语言的积：L&lt;sub&gt;1&lt;/sub&gt;和L&lt;sub&gt;2&lt;/sub&gt;的积，即L&lt;sub&gt;1&lt;/sub&gt;中所有字符串分别与L&lt;sub&gt;2&lt;/sub&gt;中的字符串连接而成的，不可交换，满足结合律&lt;/li&gt;&#xA;&lt;li&gt;语言的幂&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L&lt;sup&gt;0&lt;/sup&gt;，仅含有空串的集合&lt;/li&gt;&#xA;&lt;li&gt;L&lt;sup&gt;n&lt;/sup&gt; =  L * L&lt;sup&gt;n-1&lt;/sup&gt; = L&lt;sup&gt;n-1&lt;/sup&gt; * L   n&amp;gt;=1&lt;/li&gt;&#xA;&lt;li&gt;若L中没有空句子，则L&lt;sup&gt;n&lt;/sup&gt;中没有空句子&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;文法&#34;&gt;文法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;定义语言的一个数学模型&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;表示语言的方法&#34;&gt;表示语言的方法&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;若语言L是有限集合，可用列举法&lt;/li&gt;&#xA;&lt;li&gt;若语言L是无限集合，用其他方法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文法产生系统，定义文法规则产生出语言的每个句子&lt;/li&gt;&#xA;&lt;li&gt;机器识别系统（自动机），当一个字符串能被一个语言识别系统接受，则这个字符串是该语言的一个句子，否则不属于该语言&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;元语言&#34;&gt;元语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;定义：描述语言的语言&lt;/li&gt;&#xA;&lt;li&gt;被讨论的语言叫做对象语言，讨论对象语言的语言成为元语言&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;bnf巴科斯范式&#34;&gt;BNF（巴科斯范式）&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;讨论某种程序设计语言语言的元语言&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;什么是文法&#34;&gt;什么是文法&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文法是一种元语言，一种方法，根据文法产生出语言的句子&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chomsky文法体系&#34;&gt;Chomsky文法体系&lt;/h2&gt;&#xA;&lt;h3 id=&#34;bnf&#34;&gt;BNF&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;lt;标识符&amp;gt;::=&amp;lt;字母&amp;gt;&lt;/li&gt;&#xA;&lt;li&gt;&amp;lt;标识符&amp;gt;::=&amp;lt;标识符&amp;gt;&amp;lt;字母&amp;gt;&lt;/li&gt;&#xA;&lt;li&gt;&amp;lt;标识符&amp;gt;::=&amp;lt;标识符&amp;gt;&amp;lt;数字&amp;gt;&lt;/li&gt;&#xA;&lt;li&gt;&amp;lt;字母&amp;gt;::=a|b|……z|A|B|……|Z&lt;/li&gt;&#xA;&lt;li&gt;&amp;lt;数字&amp;gt;::=0|1|……9&lt;/li&gt;&#xA;&lt;li&gt;将::= 改为→表示可被代替&lt;/li&gt;&#xA;&lt;li&gt;用I, L, D分别表示标识符、字母、数字;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;文法生成式集合&#34;&gt;文法生成式集合&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I-&amp;gt;L&lt;/li&gt;&#xA;&lt;li&gt;I-&amp;gt;IL&lt;/li&gt;&#xA;&lt;li&gt;I-&amp;gt;ID&lt;/li&gt;&#xA;&lt;li&gt;L-&amp;gt;a|b|……|z&lt;/li&gt;&#xA;&lt;li&gt;D-&amp;gt;0|1|2|……9&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;文法g是一个四元组gntps&#34;&gt;文法G是一个四元组G=(N，T，P，S)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;N  非终结符的有限集合  I&lt;/li&gt;&#xA;&lt;li&gt;T  终结符的有限集合   N∩T=Φ&lt;/li&gt;&#xA;&lt;li&gt;P 形式为α→β的生成式的有限集合。&lt;/li&gt;&#xA;&lt;li&gt;S  起始符  且S ∈N。 I&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;推导与句型&#34;&gt;推导与句型&lt;/h2&gt;&#xA;&lt;h3 id=&#34;直接推导&#34;&gt;直接推导&lt;/h3&gt;&#xA;&lt;h3 id=&#34;推导序列&#34;&gt;推导序列&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从å&lt;sub&gt;0&lt;/sub&gt;到å&lt;sub&gt;n&lt;/sub&gt;的直接推导，是长度为n的推导序列&lt;/li&gt;&#xA;&lt;li&gt;从å&lt;sub&gt;0&lt;/sub&gt;到å&lt;sub&gt;0&lt;/sub&gt;的直接推导，是长度为0的推导序列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;句型和句子&#34;&gt;句型和句子&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;句型包含句子&lt;/li&gt;&#xA;&lt;li&gt;句子是由终结符组成的字符串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;文法产生的语言&#34;&gt;文法产生的语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L(G)，从文法的起始符开始，利用文法的产生式，所产生的终结符串的集合&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chomsky文法体系分类&#34;&gt;Chomsky文法体系分类&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对生成式的形式作规定，分为0型、1型、2型、3型文法&lt;/li&gt;&#xA;&lt;li&gt;0型文法：无限制文法&lt;/li&gt;&#xA;&lt;li&gt;1型文法：包括上下文有关文法(GSG)-&amp;gt;上下文有关语言(GSL)-&amp;gt;线性有界自动机(LBA) 把计算限制在仅仅包含输入的那一段带上的图灵机，可作为上下文有关语言的识别接受器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;左部的长度小于右部&lt;/li&gt;&#xA;&lt;li&gt;不含空串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2型文法：上下文无关文法(CFG)-&amp;gt;上下文无关语言(CFL)-&amp;gt;下推自动机(PDA)，左部是单个非终结符&lt;/li&gt;&#xA;&lt;li&gt;3型文法：正则文法-&amp;gt;有限自动机&#xA;&lt;ul&gt;&#xA;&lt;li&gt;右线性文法A-&amp;gt;ω或A-&amp;gt;ωB&lt;/li&gt;&#xA;&lt;li&gt;左线性文法A-&amp;gt;ω或A-&amp;gt;Bω&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3型文法属于2型文法，不含A-&amp;gt;ε的2型、3型文法属于1型，1型、2型、3型均属于0型&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;已知语言对应的文法不唯一&#34;&gt;已知语言，对应的文法不唯一&lt;/h3&gt;&#xA;&lt;h1 id=&#34;第三章-有限自动机与右线性文法&#34;&gt;第三章 有限自动机与右线性文法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;有限自动机&#34;&gt;有限自动机&lt;/h2&gt;&#xA;&lt;h3 id=&#34;有限状态系统&#34;&gt;有限状态系统&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;状态：可以将事物区分开的一种标识&lt;/li&gt;&#xA;&lt;li&gt;具有离散状态的系统：离散状态系统的状态数是有限的&lt;/li&gt;&#xA;&lt;li&gt;具有连续状态的系统，有无限个状态&lt;/li&gt;&#xA;&lt;li&gt;有限状态系统必然是离散状态系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;有限自动机的概念&#34;&gt;有限自动机的概念&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;具有离散输入输出的系统的一种模型（可以没有输出，比较特殊的也可以没有输入）&lt;/li&gt;&#xA;&lt;li&gt;有限的状态&lt;/li&gt;&#xA;&lt;li&gt;状态+输入-&amp;gt;状态转移&lt;/li&gt;&#xA;&lt;li&gt;每次转换的后继状态都唯-&amp;gt;DFA确定的&lt;/li&gt;&#xA;&lt;li&gt;每次转换后继状态不唯一-&amp;gt;NFA不确定的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;fa的模型&#34;&gt;FA的模型&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FA可以理解成一个控制器，它读一条输入带上的字符&lt;/li&gt;&#xA;&lt;li&gt;控制器包括有限状态&lt;/li&gt;&#xA;&lt;li&gt;从左到右依次读取字符&lt;/li&gt;&#xA;&lt;li&gt;状态+激励-&amp;gt;状态转移&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;有限自动机-1&#34;&gt;有限自动机&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有限状态集&lt;/li&gt;&#xA;&lt;li&gt;有限输入符号集&lt;/li&gt;&#xA;&lt;li&gt;转移函数&lt;/li&gt;&#xA;&lt;li&gt;一个开始状态&lt;/li&gt;&#xA;&lt;li&gt;一个终态集合，用双圈表示，可以不止一个&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;dfa&#34;&gt;DFA&lt;/h2&gt;&#xA;&lt;h3 id=&#34;dfa的形式定义&#34;&gt;DFA的形式定义&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DFA是一个五元组 M = (Q, T, δ, q&lt;sub&gt;0&lt;/sub&gt;, F)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Q:有限的状态集合&lt;/li&gt;&#xA;&lt;li&gt;T:有限的输入字母表&lt;/li&gt;&#xA;&lt;li&gt;δ:转换函数&lt;/li&gt;&#xA;&lt;li&gt;q&lt;sub&gt;0&lt;/sub&gt;:初始状态&lt;/li&gt;&#xA;&lt;li&gt;F:终止状态集&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;状态转移图&lt;/li&gt;&#xA;&lt;li&gt;状态转移表&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最左侧为状态&lt;/li&gt;&#xA;&lt;li&gt;起始状态加箭头，终止状态加*&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;扩展转移函数适合于输入字符串&#34;&gt;扩展转移函数适合于输入字符串&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;δ&amp;rsquo;函数&#xA;&lt;ul&gt;&#xA;&lt;li&gt;δ&amp;rsquo;: Q * T&lt;sup&gt;*&lt;/sup&gt; -&amp;gt; Q&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-03-11%2008.30.37.png&#34; alt=&#34;关于Q的说明&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;dfa接受的语言&#34;&gt;DFA接受的语言&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DFA接受的字符串：输入结束后使DFA的状态到达终止状态的字符串&lt;/li&gt;&#xA;&lt;li&gt;DFA接受的语言：被DFA接受的字符串的集合就是DFA接受的语言&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-03-11%2008.37.34.png&#34; alt=&#34;描述&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;格局&#34;&gt;格局&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;描述有限自动机在某一时刻的工作状态，可以用两个信息表示：当前状态q，待输入字符串w。两者构成一个顺时描述，用(q, w)表示&lt;/li&gt;&#xA;&lt;li&gt;初始格局：(q&lt;sub&gt;0&lt;/sub&gt;, w)&lt;/li&gt;&#xA;&lt;li&gt;终止格局：(q, ε)，q属于F&lt;/li&gt;&#xA;&lt;li&gt;格局数量是无限的&lt;/li&gt;&#xA;&lt;li&gt;有限状态自动机是无记忆的&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-03-11%2008.44.08.png&#34; alt=&#34;用格局来表示自动机所识别的语言&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;设计有限自动机&#34;&gt;设计有限自动机&lt;/h3&gt;&#xA;&lt;h2 id=&#34;不确定的有限自动机nfa&#34;&gt;不确定的有限自动机(NFA)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一个输入可以有多个转移，到达不同的状态，则称为不确定的有限自动机&lt;/li&gt;&#xA;&lt;li&gt;δ: Q * T -&amp;gt; 2&lt;sup&gt;Q&lt;/sup&gt;, 其余与DFA相同&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;nfa的状态转移函数&#34;&gt;NFA的状态转移函数&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-03-11%2009.19.03.png&#34; alt=&#34;NFA的状态转移函数&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
