<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文本文件处理 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</link>
    <description>Recent content in 文本文件处理 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 May 2025 10:59:49 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 文本文件处理</title>
      <link>https://y-m-m.github.io/post/linux_%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/linux_%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;文本文件及其处理工具&#34;&gt;文本文件及其处理工具&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Linux中的文本信息&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文本文件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C语言，Java语言等编程文件的源程序语言&lt;/li&gt;&#xA;&lt;li&gt;文本格式的数据文件&lt;/li&gt;&#xA;&lt;li&gt;文本格式的文字信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;程序输出&lt;/li&gt;&#xA;&lt;li&gt;系统配置信息&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/etc下的配置文件（功能类似windows的注册表）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文本型网络协议 因特网大部分传输层以上的协议是文本型协议&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会话层协议：HTTP，POP3，SMTP，IMAP，&lt;/li&gt;&#xA;&lt;li&gt;表示层协议：HTML，XML，MIME&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文本文件处理的命令&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Linux提供大量的文本文件处理的命令&lt;/li&gt;&#xA;&lt;li&gt;多数命令都有复杂的选项&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;进程的标准输入/输出，重定向，管道&#xA;&lt;ul&gt;&#xA;&lt;li&gt;进程的基本概念&#xA;&lt;ul&gt;&#xA;&lt;li&gt;进程与程序&lt;/li&gt;&#xA;&lt;li&gt;进程的生命周期&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;进程的输入输出&#xA;&lt;ul&gt;&#xA;&lt;li&gt;标准输入stdin&lt;/li&gt;&#xA;&lt;li&gt;标准输出stdout&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;重定向机制&#xA;&lt;ul&gt;&#xA;&lt;li&gt;输出重定向&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ls –l &amp;gt; filelist.txt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;输入重定向&#xA;&lt;ul&gt;&#xA;&lt;li&gt;sort &amp;lt; filelist.txt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;管道机制&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ls –l | sort&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;重定向机制和管道机制的重要性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文本文件处理命令的特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不指定处理对象文件名时，从标准输入获得数据&lt;/li&gt;&#xA;&lt;li&gt;指定处理对象文件名时，从文件中获取数据&lt;/li&gt;&#xA;&lt;li&gt;多数命令可以指定多个文件&lt;/li&gt;&#xA;&lt;li&gt;处理结果在标准输出显示&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;考虑的因素&#xA;&lt;ul&gt;&#xA;&lt;li&gt;标准输入/标准输出&lt;/li&gt;&#xA;&lt;li&gt;shell的文件通配符&lt;/li&gt;&#xA;&lt;li&gt;输入输出重定向&lt;/li&gt;&#xA;&lt;li&gt;管道&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;灵活性：工具命令的组合&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Linux倾向于提供独立的多个精巧的工具命令，数据格式为文本信息&lt;/li&gt;&#xA;&lt;li&gt;鼓励使用重定向或管道机制将多个工具命令组合在一起，提供灵活的功能&lt;/li&gt;&#xA;&lt;li&gt;应用系统设计时，也应该考虑到这些特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;例如：数据库内容的展示，直接输出多列文本，考虑到各种工具软件的使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文件读取与处理的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;more/less：逐屏显示文件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;历史&#xA;&lt;ul&gt;&#xA;&lt;li&gt;more：最先由BSD UNIX开发&lt;/li&gt;&#xA;&lt;li&gt;less：Linux上广泛使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;使用方法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;more shudu.c 指定一个文件&lt;/li&gt;&#xA;&lt;li&gt;more *.[ch] 指定多个文件&lt;/li&gt;&#xA;&lt;li&gt;ls -l | more 指定0个文件&lt;/li&gt;&#xA;&lt;li&gt;less shudu.c&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;满屏后，显示&amp;ndash;more&amp;ndash;或&amp;ndash;more&amp;ndash;(15%)，可以使用more命令&#xA;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2025-05-17%2010.47.15.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;Linux系统中的命令less&#xA;&lt;ul&gt;&#xA;&lt;li&gt;less is more&lt;/li&gt;&#xA;&lt;li&gt;回退浏览的功能更强&lt;/li&gt;&#xA;&lt;li&gt;可直接使键盘的上下箭头键，或者j,k，类似vi的光标定位键，以及PgUp，PgDn，Home，End键&lt;/li&gt;&#xA;&lt;li&gt;有的Unix系统不提供less命令，但是可利用more命令的增强功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cat与od：列出文件内容&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基本功能与命名&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cat concatenate:串结，文本格式打印 （选项-n：行号）&lt;/li&gt;&#xA;&lt;li&gt;od octal dump逐字节打印（-c, -t c, -t x1，-t d1, -t u1选项）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;举例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cat tryl.c 命令行参数1个&lt;/li&gt;&#xA;&lt;li&gt;cat –n shudu.c&lt;/li&gt;&#xA;&lt;li&gt;cat tryl.c tryx.c try.h 命令行参数3个&lt;/li&gt;&#xA;&lt;li&gt;cat &amp;gt; try 命令行参数=0个，从stdin获取数据，直到ctrl-d&lt;/li&gt;&#xA;&lt;li&gt;cat tryl.c try2.c try.h &amp;gt; trysrc&lt;/li&gt;&#xA;&lt;li&gt;cat makefile *.[ch] &amp;gt; src&lt;/li&gt;&#xA;&lt;li&gt;od –t x1 x.dat 以十六进制打印文件x.dat各字节&lt;/li&gt;&#xA;&lt;li&gt;od –t x1 x.dat | more 以十六进制打印文件x.dat各字节&lt;/li&gt;&#xA;&lt;li&gt;od –c /bin/bash 逐字符方式打印文件，遇到不可打印字符打印编码&lt;/li&gt;&#xA;&lt;li&gt;echo abcdABCD | od –t x1 十六进制分开显示字符的ASCII码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;head与tail：显示文件的头部或者尾部&#xA;&lt;ul&gt;&#xA;&lt;li&gt;默认只选择10行，-n选项可以选择行数&lt;/li&gt;&#xA;&lt;li&gt;head –n 15 ab.c&#xA;&lt;ul&gt;&#xA;&lt;li&gt;显示文件ab.c中前15行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;head –n 23 a.c b.c c.c | more&#xA;&lt;ul&gt;&#xA;&lt;li&gt;显示三个文件各自的前23行共显示69行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;tail –n 40 liu.mail&lt;/li&gt;&#xA;&lt;li&gt;head –n -20 msg.c 除去文件尾部20行其余均算“头”&lt;/li&gt;&#xA;&lt;li&gt;tail –n +20 msg.c 除去文件头部20行其余均算作“尾”&lt;/li&gt;&#xA;&lt;li&gt;tail -f debug.txt 实时打印文件尾部被追加的内容（选项-f:forever）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;netstat -s -t| head -n 20 显示tcp协议的统计数据&lt;/li&gt;&#xA;&lt;li&gt;ls -s | sort | head –n 20&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;tee：三通&#xA;&lt;ul&gt;&#xA;&lt;li&gt;功能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将从标准输入stdin得到的数据抄送到标准输出stdout显示，同时存入磁盘文件中&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;应用举例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;./myap | tee myap.log&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;wc：字计数&#xA;&lt;ul&gt;&#xA;&lt;li&gt;功能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;列出文件中一共有多少行，有多少个单词，多少字符&lt;/li&gt;&#xA;&lt;li&gt;当指定的文件数大于1时，最后还列出一个合计&lt;/li&gt;&#xA;&lt;li&gt;常用选项-l：只列出行计数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;举例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;wc sum.c （1个文件）&lt;/li&gt;&#xA;&lt;li&gt;wc x.c makefile stat.sh （多个文件）&lt;/li&gt;&#xA;&lt;li&gt;wc -l *.c makefile start.sh&lt;/li&gt;&#xA;&lt;li&gt;ps -ef | wc -l （以标准输入作为输入；可用于统计系统中进程总数）&lt;/li&gt;&#xA;&lt;li&gt;ps -ef | grep liang | wc -l （和liang相关的进程个数）&lt;/li&gt;&#xA;&lt;li&gt;who | wc -l （当前系统登录用户个数）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;sort：对文件内容排序&#xA;&lt;ul&gt;&#xA;&lt;li&gt;sort选项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-n选项(Numberic):对于数字按照算术值大小排序，而不是按照字符串比较规则，例如123与67&lt;/li&gt;&#xA;&lt;li&gt;可以选择行中某一部分作为排序关键字&lt;/li&gt;&#xA;&lt;li&gt;选择升序或降序（-r）&lt;/li&gt;&#xA;&lt;li&gt;字符串比较时对字母是否区分大小写&lt;/li&gt;&#xA;&lt;li&gt;内排序外排序等算法参数选择（当数据量较大时，性能调优）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;举例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;sort telno &amp;gt; telno1&lt;/li&gt;&#xA;&lt;li&gt;ls -s | sort | tail –10&lt;/li&gt;&#xA;&lt;li&gt;ls -s | sort -n | tail –10&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;tr：翻译字符&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;tr string1 string2&lt;/li&gt;&#xA;&lt;li&gt;把标准输入拷贝到标准输出，string1中出现的字符替换为string2中的对应字符&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;例&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cat telnos | tr UVX uvx&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;例：用［］指定一个集合&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cat report | tr &amp;lsquo;[a-z]&amp;rsquo; &amp;lsquo;[A-Z]&amp;rsquo;&lt;/li&gt;&#xA;&lt;li&gt;将小写字母改为大写字母&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;例：用\加三个八进制数字(类似C语言)表示一字符&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cat file1 | tr % &amp;lsquo;\012&amp;rsquo; 将%改为换行符,注意不要漏掉必需的单引号&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;uniq：筛选文件中的重复行&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;uniq options&lt;/li&gt;&#xA;&lt;li&gt;uniq options input-file&lt;/li&gt;&#xA;&lt;li&gt;uniq options input-file output-file&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;重复的行：紧邻的两行内容相同&lt;/li&gt;&#xA;&lt;li&gt;选项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-u （uniqe）只保留没有重复的行&lt;/li&gt;&#xA;&lt;li&gt;-d （duplicated）只保留有重复的行（但只打印一次）&lt;/li&gt;&#xA;&lt;li&gt;没有以上两个选项，打印没有重复的行和有重复的行(但只打印一次)&lt;/li&gt;&#xA;&lt;li&gt;-c （count）计数同样的行出现几次&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
