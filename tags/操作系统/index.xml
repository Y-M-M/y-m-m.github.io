<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作系统 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 操作系统 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 05 Sep 2025 09:48:53 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>操作系统bilibili版</title>
      <link>https://y-m-m.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h1 id=&#34;第一章-操作系统的介绍&#34;&gt;第一章 操作系统的介绍&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11_1-操作系统的概念功能&#34;&gt;1.1_1 操作系统的概念、功能&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作系统控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境；它是计算机系统中最基本的系统软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作系统是系统资源的管理者&#xA;&lt;ul&gt;&#xA;&lt;li&gt;补充：执行一个程序前需要将该程序放到内存中，才能被CPU处理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;向上提供方便易用的服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;封装思想：操作系统把一些丑陋的硬件共嗯那个封装成简单易用的服务，使用户能更方便的使用计算机，用户无需关心底层硬件的原理，只需要对操作系统发出指令即可&lt;/li&gt;&#xA;&lt;li&gt;GUI 图形化用户接口&lt;/li&gt;&#xA;&lt;li&gt;联机命令接口=交互式命令接口&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用户说一句，系统跟着做一句&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;脱机命令接口(批处理命令接口)&lt;/li&gt;&#xA;&lt;li&gt;程序接口&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以在程序中进行系统调用来使用程序接口。普通用户不能直接使用程序接口，只能通过程序代码间接使用&lt;/li&gt;&#xA;&lt;li&gt;例如，在写C语言&amp;quot;Hello World&amp;quot;程序时，在printf函数的底层就使用到了操作系统提供的显式相关的“系统调用”&lt;/li&gt;&#xA;&lt;li&gt;系统调用类似于函数调用，是应用程序请求系统操作服务的唯一方式&lt;/li&gt;&#xA;&lt;li&gt;在有的教材中，系统调用=广义指令&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;是最接近硬件的一层软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要实现对硬件机器的扩展&lt;/li&gt;&#xA;&lt;li&gt;裸机：没有任何软件支持的计算机称为裸机&lt;/li&gt;&#xA;&lt;li&gt;虚拟机：覆盖了软件的机器称为扩充机器，又称之为虚拟机&lt;/li&gt;&#xA;&lt;li&gt;操作系统将CPU, 内存，磁盘，显示器，键盘等硬件合理地组织起来，让各种硬件能够相互协调配合，实现更多更复杂的功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2019.53.51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;11_2-操作系统的特征&#34;&gt;1.1_2 操作系统的特征&lt;/h2&gt;&#xA;&lt;h3 id=&#34;并发&#34;&gt;并发&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;并发：两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。/并行：两个或多个事件在同一时刻同时发生&lt;/li&gt;&#xA;&lt;li&gt;操作系统的并发性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机系统中“同时”运行着多个程序，这些程序宏观上看是同时运行着的，而微观上看是交替运行的。操作系统就是伴随着“多道程序技术”而出现的，因此，操作系统和程序并发是一起诞生的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;注意&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单核CPU同一时刻只能执行一个程序，多个程序只能并发执行&lt;/li&gt;&#xA;&lt;li&gt;多核CPU同一时刻可以同时执行多个程序，多个程序可以并行地执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;是操作系统一个重要的基础特性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;共享&#34;&gt;共享&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;资源共享，系统中的资源可供内存中多个并发执行的进程共同使用&lt;/li&gt;&#xA;&lt;li&gt;两种共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;互斥共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一个时间段内只允许一个进程访问该资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;同时共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;允许一个时间段内多个进程“同时”对它们进行访问&lt;/li&gt;&#xA;&lt;li&gt;同时往往是宏观上的，微观上，这些进程可能是交替地对该资源进行访问的(分时共享)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;并发和共享的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去并发性，则系统中只有一个程序正在运行，则共享性失去存在的意义&lt;/li&gt;&#xA;&lt;li&gt;如果失去共享性，则QQ和微信不能同时访问硬盘资源，就无法实现同时发送文件，也就无法并发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;虚拟&#34;&gt;虚拟&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的，而逻辑上的对应物(后者)是用户感应到的&lt;/li&gt;&#xA;&lt;li&gt;虚拟技术&#xA;&lt;ul&gt;&#xA;&lt;li&gt;空分复用技术(如虚拟存储技术)&lt;/li&gt;&#xA;&lt;li&gt;时分复用技术(如虚拟处理器)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;并发性与虚拟性的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去了并发性，则一个时间段内系统中之运行一道程序，那么就失去了实现虚拟性的意义了&lt;/li&gt;&#xA;&lt;li&gt;没有并发性，就谈不上虚拟性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;异步&#34;&gt;异步&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;异步是指，在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性&lt;/li&gt;&#xA;&lt;li&gt;由于并发运行的程序会争抢着使用系统资源，而系统中的资源有限，因此进程的执行不是一贯到底的，而是走走停停的，以不可预知的速度向前推进&lt;/li&gt;&#xA;&lt;li&gt;并发性与异步性的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去了并发性，即系统只能串行地运行各个程序，那么每个程序的执行会一贯到底，只有程序拥有并发性，才有可能导致异步性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结-1&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2022.16.20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;12-操作系统的发展和分类&#34;&gt;1.2 操作系统的发展和分类&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;手工操作阶段&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要缺点：用户独占全机、人际速度矛盾导致资源利用率低&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;批处理阶段——单道批处理系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;引入脱机输入/输出技术，并由监督程序负责控制作业的输入、输出&lt;/li&gt;&#xA;&lt;li&gt;监督程序是操作系统的雏形&lt;/li&gt;&#xA;&lt;li&gt;主要优点：缓解了一定程度的人机速度矛盾，资源利用率有所提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;批处理阶段——多道批处理系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每次往内存中读入多道程序&lt;/li&gt;&#xA;&lt;li&gt;操作系统正式诞生，用于支持多道程序并发运行&lt;/li&gt;&#xA;&lt;li&gt;主要优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌“状态，系统吞吐量大&lt;/li&gt;&#xA;&lt;li&gt;主要缺点：用户响应时间长，没有人机交互功能(用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行。无法调试程序/无法在程序运行过程中输入一些参数)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分时操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互&lt;/li&gt;&#xA;&lt;li&gt;主要优点：用户请求可以被即时相应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在&lt;/li&gt;&#xA;&lt;li&gt;主要缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环地为每个用户/作业服务一个时间片，不区分任务的紧急性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;实时操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要优点：能够优先响应一些紧急任务，某些紧急任务不需时间片排队&lt;/li&gt;&#xA;&lt;li&gt;在实时操作系统的控制下，计算机系统接收到外部信号后及时进行处理，并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性&lt;/li&gt;&#xA;&lt;li&gt;分类&#xA;&lt;ul&gt;&#xA;&lt;li&gt;硬实时系统：必须在绝对严格的规定时间内完成处理&lt;/li&gt;&#xA;&lt;li&gt;软实时系统：能接受偶尔违反时间规定&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;其他几种操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;网络操作系统 实现数据传送等功能，实现网络中各种资源的共(如文件共享)和各台计算机之间的通信&lt;/li&gt;&#xA;&lt;li&gt;分布式操作系统：分布性和并行性。系统中各台计算机地位相同，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务&lt;/li&gt;&#xA;&lt;li&gt;个人计算机操作系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结-2&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2022.29.42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统bilibili版</title>
      <link>https://y-m-m.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9Fbilibili%E7%89%88/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9Fbilibili%E7%89%88/</guid>
      <description>&lt;h1 id=&#34;第一章-操作系统的介绍&#34;&gt;第一章 操作系统的介绍&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11_1-操作系统的概念功能&#34;&gt;1.1_1 操作系统的概念、功能&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作系统控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境；它是计算机系统中最基本的系统软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作系统是系统资源的管理者&#xA;&lt;ul&gt;&#xA;&lt;li&gt;补充：执行一个程序前需要将该程序放到内存中，才能被CPU处理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;向上提供方便易用的服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;封装思想：操作系统把一些丑陋的硬件共嗯那个封装成简单易用的服务，使用户能更方便的使用计算机，用户无需关心底层硬件的原理，只需要对操作系统发出指令即可&lt;/li&gt;&#xA;&lt;li&gt;GUI 图形化用户接口&lt;/li&gt;&#xA;&lt;li&gt;联机命令接口=交互式命令接口&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用户说一句，系统跟着做一句&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;脱机命令接口(批处理命令接口)&lt;/li&gt;&#xA;&lt;li&gt;程序接口&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以在程序中进行系统调用来使用程序接口。普通用户不能直接使用程序接口，只能通过程序代码间接使用&lt;/li&gt;&#xA;&lt;li&gt;例如，在写C语言&amp;quot;Hello World&amp;quot;程序时，在printf函数的底层就使用到了操作系统提供的显式相关的“系统调用”&lt;/li&gt;&#xA;&lt;li&gt;系统调用类似于函数调用，是应用程序请求系统操作服务的唯一方式&lt;/li&gt;&#xA;&lt;li&gt;在有的教材中，系统调用=广义指令&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;是最接近硬件的一层软件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要实现对硬件机器的扩展&lt;/li&gt;&#xA;&lt;li&gt;裸机：没有任何软件支持的计算机称为裸机&lt;/li&gt;&#xA;&lt;li&gt;虚拟机：覆盖了软件的机器称为扩充机器，又称之为虚拟机&lt;/li&gt;&#xA;&lt;li&gt;操作系统将CPU, 内存，磁盘，显示器，键盘等硬件合理地组织起来，让各种硬件能够相互协调配合，实现更多更复杂的功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2019.53.51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;11_2-操作系统的特征&#34;&gt;1.1_2 操作系统的特征&lt;/h2&gt;&#xA;&lt;h3 id=&#34;并发&#34;&gt;并发&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;并发：两个或多个事件在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。/并行：两个或多个事件在同一时刻同时发生&lt;/li&gt;&#xA;&lt;li&gt;操作系统的并发性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机系统中“同时”运行着多个程序，这些程序宏观上看是同时运行着的，而微观上看是交替运行的。操作系统就是伴随着“多道程序技术”而出现的，因此，操作系统和程序并发是一起诞生的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;注意&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单核CPU同一时刻只能执行一个程序，多个程序只能并发执行&lt;/li&gt;&#xA;&lt;li&gt;多核CPU同一时刻可以同时执行多个程序，多个程序可以并行地执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;是操作系统一个重要的基础特性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;共享&#34;&gt;共享&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;资源共享，系统中的资源可供内存中多个并发执行的进程共同使用&lt;/li&gt;&#xA;&lt;li&gt;两种共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;互斥共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一个时间段内只允许一个进程访问该资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;同时共享方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;允许一个时间段内多个进程“同时”对它们进行访问&lt;/li&gt;&#xA;&lt;li&gt;同时往往是宏观上的，微观上，这些进程可能是交替地对该资源进行访问的(分时共享)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;并发和共享的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去并发性，则系统中只有一个程序正在运行，则共享性失去存在的意义&lt;/li&gt;&#xA;&lt;li&gt;如果失去共享性，则QQ和微信不能同时访问硬盘资源，就无法实现同时发送文件，也就无法并发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;虚拟&#34;&gt;虚拟&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的，而逻辑上的对应物(后者)是用户感应到的&lt;/li&gt;&#xA;&lt;li&gt;虚拟技术&#xA;&lt;ul&gt;&#xA;&lt;li&gt;空分复用技术(如虚拟存储技术)&lt;/li&gt;&#xA;&lt;li&gt;时分复用技术(如虚拟处理器)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;并发性与虚拟性的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去了并发性，则一个时间段内系统中之运行一道程序，那么就失去了实现虚拟性的意义了&lt;/li&gt;&#xA;&lt;li&gt;没有并发性，就谈不上虚拟性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;异步&#34;&gt;异步&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;异步是指，在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性&lt;/li&gt;&#xA;&lt;li&gt;由于并发运行的程序会争抢着使用系统资源，而系统中的资源有限，因此进程的执行不是一贯到底的，而是走走停停的，以不可预知的速度向前推进&lt;/li&gt;&#xA;&lt;li&gt;并发性与异步性的关系&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果失去了并发性，即系统只能串行地运行各个程序，那么每个程序的执行会一贯到底，只有程序拥有并发性，才有可能导致异步性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结-1&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2022.16.20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;12-操作系统的发展和分类&#34;&gt;1.2 操作系统的发展和分类&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;手工操作阶段&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要缺点：用户独占全机、人际速度矛盾导致资源利用率低&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;批处理阶段——单道批处理系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;引入脱机输入/输出技术，并由监督程序负责控制作业的输入、输出&lt;/li&gt;&#xA;&lt;li&gt;监督程序是操作系统的雏形&lt;/li&gt;&#xA;&lt;li&gt;主要优点：缓解了一定程度的人机速度矛盾，资源利用率有所提升&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;批处理阶段——多道批处理系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每次往内存中读入多道程序&lt;/li&gt;&#xA;&lt;li&gt;操作系统正式诞生，用于支持多道程序并发运行&lt;/li&gt;&#xA;&lt;li&gt;主要优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌“状态，系统吞吐量大&lt;/li&gt;&#xA;&lt;li&gt;主要缺点：用户响应时间长，没有人机交互功能(用户提交自己的作业之后就只能等待计算机处理完成，中间不能控制自己的作业执行。无法调试程序/无法在程序运行过程中输入一些参数)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分时操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互&lt;/li&gt;&#xA;&lt;li&gt;主要优点：用户请求可以被即时相应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在&lt;/li&gt;&#xA;&lt;li&gt;主要缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环地为每个用户/作业服务一个时间片，不区分任务的紧急性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;实时操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要优点：能够优先响应一些紧急任务，某些紧急任务不需时间片排队&lt;/li&gt;&#xA;&lt;li&gt;在实时操作系统的控制下，计算机系统接收到外部信号后及时进行处理，并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性&lt;/li&gt;&#xA;&lt;li&gt;分类&#xA;&lt;ul&gt;&#xA;&lt;li&gt;硬实时系统：必须在绝对严格的规定时间内完成处理&lt;/li&gt;&#xA;&lt;li&gt;软实时系统：能接受偶尔违反时间规定&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;其他几种操作系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;网络操作系统 实现数据传送等功能，实现网络中各种资源的共(如文件共享)和各台计算机之间的通信&lt;/li&gt;&#xA;&lt;li&gt;分布式操作系统：分布性和并行性。系统中各台计算机地位相同，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务&lt;/li&gt;&#xA;&lt;li&gt;个人计算机操作系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结-2&#34;&gt;总结&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://y-m-m.github.io/images/%E6%88%AA%E5%B1%8F2024-09-11%2022.29.42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
