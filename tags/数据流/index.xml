<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据流 on 陈皮的博客</title>
    <link>https://y-m-m.github.io/tags/%E6%95%B0%E6%8D%AE%E6%B5%81/</link>
    <description>Recent content in 数据流 on 陈皮的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 30 Apr 2025 16:22:55 +0800</lastBuildDate>
    <atom:link href="https://y-m-m.github.io/tags/%E6%95%B0%E6%8D%AE%E6%B5%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>leetcode hot100 295 数据流的中位数</title>
      <link>https://y-m-m.github.io/post/leetcodehot295%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://y-m-m.github.io/post/leetcodehot295%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/find-median-from-data-stream/description/?envType=study-plan-v2&amp;amp;envId=top-100-liked&#34;&gt;leetcode hot100 295 数据流的中位数&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;中位数是有序整数列表中的中间值。如果列表的大小是偶数，则没有中间值，中位数是两个中间值的平均值。           &lt;br&gt;&#xA;例如 arr = [2,3,4] 的中位数是 3 。             &lt;br&gt;&#xA;例如 arr = [2,3] 的中位数是 (2 + 3) / 2 = 2.5 。          &lt;br&gt;&#xA;实现 MedianFinder 类:             &lt;br&gt;&#xA;MedianFinder() 初始化 MedianFinder 对象。                &lt;br&gt;&#xA;void addNum(int num) 将数据流中的整数 num 添加到数据结构中。               &lt;br&gt;&#xA;double findMedian() 返回到目前为止所有元素的中位数。与实际答案相差 10-5 以内的答案将被接受。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;&#xA;&lt;h2 id=&#34;示例一&#34;&gt;示例一&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;输入              &lt;br&gt;&#xA;[&amp;ldquo;MedianFinder&amp;rdquo;, &amp;ldquo;addNum&amp;rdquo;, &amp;ldquo;addNum&amp;rdquo;, &amp;ldquo;findMedian&amp;rdquo;, &amp;ldquo;addNum&amp;rdquo;, &amp;ldquo;findMedian&amp;rdquo;]           &lt;br&gt;&#xA;[[], [1], [2], [], [3], []]           &lt;br&gt;&#xA;输出             &lt;br&gt;&#xA;[null, null, null, 1.5, null, 2.0]            &lt;br&gt;&#xA;解释        &lt;br&gt;&#xA;MedianFinder medianFinder = new MedianFinder();            &lt;br&gt;&#xA;medianFinder.addNum(1);    // arr = [1]       &lt;br&gt;&#xA;medianFinder.addNum(2);    // arr = [1, 2]        &lt;br&gt;&#xA;medianFinder.findMedian(); // 返回 1.5 ((1 + 2) / 2)       &lt;br&gt;&#xA;medianFinder.addNum(3);    // arr[1, 2, 3]      &lt;br&gt;&#xA;medianFinder.findMedian(); // return 2.0&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
